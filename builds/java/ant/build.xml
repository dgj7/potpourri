<project name="Sample" basedir="." default="clean-run">
	<property name="main-class" value="com.dg.sample.Main"/>
	<property name="root.dir" location="."/>
	<property name="src.dir" location="${root.dir}/src/main"/>
	<property name="bin.dir" location="${root.dir}/bin"/>
	<property name="compile.dir" location="${root.dir}/compile"/>
	<property name="final.dir" location="${bin.dir}"/>
	<property name="lib.dir" location="${root.dir}/lib"/>
	<property name="lib.test.dir" location="${lib.dir}/test"/>
	<property name="lib.common.dir" location="${lib.dir}/common"/>
	<property name="classes.dir" location="${compile.dir}/classes"/>
	<property name="jar.dir" location="${compile.dir}/jar"/>
	<property name="test.dir" location="${root.dir}/src/test"/>
	<property name="test.bin.dir" location="${compile.dir}/test-classes"/>
	<property name="report.dir" location="${compile.dir}/report"/>
	<property name="zip.dir" location="${compile.dir}/zip"/>
	<property name="log.dir" location="${compile.dir}/logs"/>
	<path id="application" location="${jar.dir}/${ant.project.name}.jar"/>
	
	<path id="classpath">
		<fileset dir="${lib.common.dir}" includes="**/*.jar"/>
		<fileset dir="${lib.test.dir}" includes="**/*.jar"/>
		<pathelement location="${classes.dir}"/>
	</path>
	
	<!-- delete compiled sources before rebuild -->
	<target name="clean">
		<delete dir="${log.dir}"/>
		<mkdir dir="${log.dir}"/>
		<mkdir dir="${compile.dir}"/>
		<record name="${log.dir}/clean-log.log" action="start" loglevel="verbose"/>
		
		<delete dir="${classes.dir}"/>
		<delete dir="${jar.dir}"/>
		<delete dir="${report.dir}"/>
		<delete dir="${test.bin.dir}"/>
		<delete dir="${zip.dir}"/>
		<delete dir="${final.dir}"/>
		<record name="${log.dir}/clean-log.log" action="stop"/>
	</target>
	
	<!-- build compiled sources -->
	<target name="compile" depends="clean">
		<record name="${log.dir}/compile-log.log" action="start" loglevel="verbose"/>
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${test.bin.dir}"/>
		<mkdir dir="${zip.dir}"/>
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
		<javac includeantruntime="false" srcdir="${test.dir}" destdir="${test.bin.dir}" classpathref="classpath"/>
		
		<!-- zip sources into distributable zip file -->
		<zip destfile="${zip.dir}/src.zip">
			<zipfileset dir="${src.dir}" prefix="src"/>
			<zipfileset dir="${test.dir}" prefix="test"/>
			<zipfileset dir="${lib.common.dir}" prefix="lib/common"/>
			<zipfileset dir="${lib.test.dir}" prefix="lib/test"/>
		</zip>
		<record name="${log.dir}/compile-log.log" action="stop"/>
	</target>
	
	<!-- run unit tests and pass build only if 100% pass -->
    <!-- https://repo1.maven.org/maven2/junit/junit/4.12/ -->
    <!-- https://repo1.maven.org/maven2/org/hamcrest/hamcrest-all/1.3/ -->
	<target name="junit" depends="compile">
		<record name="${log.dir}/junit-log.log" action="start" loglevel="verbose"/>
		<mkdir dir="${report.dir}"/>
		<mkdir dir="${report.dir}/xml"/>
		<junit printsummary="yes" failureproperty="test.failed">
			<classpath>
				<path refid="classpath"/>
				<path location="${test.bin.dir}"/>
				<path location="${test.dir}"/>
				<pathelement location="${lib.test.dir}/junit-4.12.jar"/>
			</classpath>
			<formatter type="xml"/>
			<batchtest skipNonTests="true" fork="yes" todir="${report.dir}/xml">
				<fileset dir="${test.dir}" includes="**/*.java"/>
			</batchtest>
		</junit>
		<junitreport todir="${report.dir}/xml">
			<fileset dir="${report.dir}/xml" includes="TEST-*.xml"/>
			<report todir="${report.dir}"/>
		</junitreport>
		<fail if="test.failed" message="test(s) failed, build process halted."/>
		<record name="${log.dir}/junit-log.log" action="stop"/>
	</target>
	
	<!-- create jar file -->
	<target name="jar" depends="junit">
		<record name="${log.dir}/jar-log.log" action="start" loglevel="verbose"/>
		<mkdir dir="${jar.dir}"/>
		<manifestclasspath property="mf.classpath" jarfile="${jar.dir}/${ant.project.name}.jar">
			<classpath>
				<fileset dir="${lib.common.dir}" includes="*.jar"/>
			</classpath>
		</manifestclasspath>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="Class-Path" value="${mf.classpath}"/>
			</manifest>
			<zipgroupfileset dir="${lib.common.dir}" includes="*.jar"/>
		</jar>
		
		<!-- copy compiled sources to bin dir -->
		<copy todir="${final.dir}">
			<fileset dir="${compile.dir}"/>
		</copy>
		<record name="${log.dir}/jar-log.log" action="stop"/>
	</target>
	
	<!-- execute the jar if and only if all junits pass -->
	<target name="run" depends="jar">
		<java fork="true" classname="${main-class}">
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>
		</java>
	</target>
	
	<!-- groupings of targets for specific usages -->
	<target name="clean-test" depends="clean,junit"/>
	<target name="clean-build" depends="clean,jar"/>
	<target name="clean-run" depends="clean,run"/>
</project>
